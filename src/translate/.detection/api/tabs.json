{
  "filePath": "./src/components/tabs/tabs.tsx",
  "encapsulation": "shadow",
  "tag": "ion-tabs",
  "docs": "",
  "docsTags": [
    {
      "name": "slot",
      "text": "- Content is placed between the named slots if provided without a slot."
    },
    {
      "name": "slot",
      "text": "top - Content is placed at the top of the screen."
    },
    {
      "name": "slot",
      "text": "bottom - Content is placed at the bottom of the screen."
    }
  ],
  "usage": {},
  "props": [],
  "methods": [
    {
      "name": "getSelected",
      "returns": {
        "type": "Promise<string | undefined>",
        "docs": ""
      },
      "signature": "getSelected() => Promise<string | undefined>",
      "parameters": [],
      "docs": "Get the currently selected tab. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.",
      "docsTags": []
    },
    {
      "name": "getTab",
      "returns": {
        "type": "Promise<HTMLIonTabElement | undefined>",
        "docs": ""
      },
      "signature": "getTab(tab: string | HTMLIonTabElement) => Promise<HTMLIonTabElement | undefined>",
      "parameters": [],
      "docs": "Get a specific tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.",
      "docsTags": [
        {
          "name": "param",
          "text": "tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property."
        }
      ]
    },
    {
      "name": "select",
      "returns": {
        "type": "Promise<boolean>",
        "docs": ""
      },
      "signature": "select(tab: string | HTMLIonTabElement) => Promise<boolean>",
      "parameters": [],
      "docs": "Select a tab by the value of its `tab` property or an element reference. This method is only available for vanilla JavaScript projects. The Angular, React, and Vue implementations of tabs are coupled to each framework's router.",
      "docsTags": [
        {
          "name": "param",
          "text": "tab The tab instance to select. If passed a string, it should be the value of the tab's `tab` property."
        }
      ]
    }
  ],
  "events": [
    {
      "event": "ionTabsDidChange",
      "detail": "{ tab: string; }",
      "bubbles": false,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the navigation has finished transitioning to a new component.",
      "docsTags": []
    },
    {
      "event": "ionTabsWillChange",
      "detail": "{ tab: string; }",
      "bubbles": false,
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the navigation is about to transition to a new component.",
      "docsTags": []
    }
  ],
  "listeners": [],
  "styles": [],
  "slots": [
    {
      "name": "",
      "docs": "Content is placed between the named slots if provided without a slot."
    },
    {
      "name": "bottom",
      "docs": "Content is placed at the bottom of the screen."
    },
    {
      "name": "top",
      "docs": "Content is placed at the top of the screen."
    }
  ],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}