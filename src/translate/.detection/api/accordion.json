{
  "filePath": "./src/components/accordion/accordion.tsx",
  "encapsulation": "shadow",
  "tag": "ion-accordion",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "slot",
      "text": "header - Content is placed at the top and is used to\nexpand or collapse the accordion item."
    },
    {
      "name": "slot",
      "text": "content - Content is placed below the header and is\nshown or hidden based on expanded state."
    },
    {
      "name": "part",
      "text": "header - The wrapper element for the header slot."
    },
    {
      "name": "part",
      "text": "content - The wrapper element for the content slot."
    },
    {
      "name": "part",
      "text": "expanded - The expanded element. Can be used in combination\nwith the `header` and `content` parts (i.e. `::part(header expanded)`)."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the accordion cannot be interacted with.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "readonly",
      "type": "boolean",
      "mutable": false,
      "attr": "readonly",
      "reflectToAttr": false,
      "docs": "If `true`, the accordion cannot be interacted with,\nbut does not alter the opacity.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "toggleIcon",
      "type": "string",
      "mutable": false,
      "attr": "toggle-icon",
      "reflectToAttr": false,
      "docs": "The toggle icon to use. This icon will be\nrotated when the accordion is expanded\nor collapsed.",
      "docsTags": [],
      "default": "chevronDown",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "toggleIconSlot",
      "type": "\"end\" | \"start\"",
      "mutable": false,
      "attr": "toggle-icon-slot",
      "reflectToAttr": false,
      "docs": "The slot inside of `ion-item` to\nplace the toggle icon. Defaults to `\"end\"`.",
      "docsTags": [],
      "default": "'end'",
      "values": [
        {
          "value": "end",
          "type": "string"
        },
        {
          "value": "start",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "value",
      "type": "string",
      "mutable": false,
      "attr": "value",
      "reflectToAttr": false,
      "docs": "The value of the accordion. Defaults to an autogenerated\nvalue.",
      "docsTags": [],
      "default": "`ion-accordion-${accordionIds++}`",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [
    {
      "name": "content",
      "docs": "Content is placed below the header and is\nshown or hidden based on expanded state."
    },
    {
      "name": "header",
      "docs": "Content is placed at the top and is used to\nexpand or collapse the accordion item."
    }
  ],
  "parts": [
    {
      "name": "content",
      "docs": "The wrapper element for the content slot."
    },
    {
      "name": "expanded",
      "docs": "The expanded element. Can be used in combination\nwith the `header` and `content` parts (i.e. `::part(header expanded)`)."
    },
    {
      "name": "header",
      "docs": "The wrapper element for the header slot."
    }
  ],
  "dependents": [],
  "dependencies": [
    "ion-icon"
  ],
  "dependencyGraph": {
    "ion-accordion": [
      "ion-icon"
    ]
  }
}