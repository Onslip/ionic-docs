{
  "filePath": "src/components/ripple-effect/ripple-effect.tsx",
  "encapsulation": "shadow",
  "tag": "ion-ripple-effect",
  "docs": "",
  "docsTags": [],
  "usage": {},
  "props": [
    {
      "name": "type",
      "type": "\"bounded\" | \"unbounded\"",
      "complexType": {
        "original": "'bounded' | 'unbounded'",
        "resolved": "\"bounded\" | \"unbounded\"",
        "references": {}
      },
      "mutable": false,
      "attr": "type",
      "reflectToAttr": false,
      "docs": "Sets the type of ripple-effect:\n\n- `bounded`: the ripple effect expands from the user's click position\n- `unbounded`: the ripple effect expands from the center of the button and overflows the container.\n\nNOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\nwhile surfaces for unbounded ripples should have it set to visible.",
      "docsTags": [],
      "default": "'bounded'",
      "values": [
        {
          "value": "bounded",
          "type": "string"
        },
        {
          "value": "unbounded",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [
    {
      "name": "addRipple",
      "returns": {
        "type": "Promise<() => void>",
        "docs": ""
      },
      "complexType": {
        "signature": "(x: number, y: number) => Promise<() => void>",
        "parameters": [
          {
            "tags": [
              {
                "name": "param",
                "text": "x The horizontal coordinate of where the ripple should start."
              }
            ],
            "text": "The horizontal coordinate of where the ripple should start."
          },
          {
            "tags": [
              {
                "name": "param",
                "text": "y The vertical coordinate of where the ripple should start."
              }
            ],
            "text": "The vertical coordinate of where the ripple should start."
          }
        ],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<() => void>"
      },
      "signature": "addRipple(x: number, y: number) => Promise<() => void>",
      "parameters": [],
      "docs": "Adds the ripple effect to the parent element.",
      "docsTags": [
        {
          "name": "param",
          "text": "x The horizontal coordinate of where the ripple should start."
        },
        {
          "name": "param",
          "text": "y The vertical coordinate of where the ripple should start."
        }
      ]
    }
  ],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [],
  "parts": [],
  "dependents": [
    "ion-action-sheet",
    "ion-alert",
    "ion-back-button",
    "ion-button",
    "ion-card",
    "ion-chip",
    "ion-datetime-button",
    "ion-fab-button",
    "ion-item",
    "ion-item-option",
    "ion-menu-button",
    "ion-segment-button",
    "ion-tab-button",
    "ion-toast"
  ],
  "dependencies": [],
  "dependencyGraph": {
    "ion-action-sheet": [
      "ion-ripple-effect"
    ],
    "ion-alert": [
      "ion-ripple-effect"
    ],
    "ion-back-button": [
      "ion-ripple-effect"
    ],
    "ion-button": [
      "ion-ripple-effect"
    ],
    "ion-card": [
      "ion-ripple-effect"
    ],
    "ion-chip": [
      "ion-ripple-effect"
    ],
    "ion-datetime-button": [
      "ion-ripple-effect"
    ],
    "ion-fab-button": [
      "ion-ripple-effect"
    ],
    "ion-item": [
      "ion-ripple-effect"
    ],
    "ion-item-option": [
      "ion-ripple-effect"
    ],
    "ion-menu-button": [
      "ion-ripple-effect"
    ],
    "ion-segment-button": [
      "ion-ripple-effect"
    ],
    "ion-tab-button": [
      "ion-ripple-effect"
    ],
    "ion-toast": [
      "ion-ripple-effect"
    ]
  }
}